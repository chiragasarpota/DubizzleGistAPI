{"version":3,"sources":["components/Search.js","components/Header.js","GlobalStyle.js","components/File.js","components/Gist.js","components/GistList.js","services/gistService.js","App.js","index.js"],"names":["Wrapper","styled","div","InputBox","Input","input","Search","props","name","placeholder","onKeyDown","e","key","getUserList","target","value","Header","mega","GlobalStyles","createGlobalStyle","FileItem","href","url","style","aStyle","fileName","color","fontWeight","textDecoration","File","Object","keys","gistItem","files","map","index","filename","raw_url","image_style","width","height","borderRadius","rootDivStyle","borderBottom","paddingTop","paddingBottom","internalDivStyle","display","alignItems","gap","marginTop","paddingLeft","paddingRight","Gist","src","avatar_link","user_link","user_name","file_length","comments","created_time","updated_time","description","h1Style","textAlign","centerDivsStyle","diplay","GistList","invalidUser","gistList","owner","avatar_url","html_url","login","length","moment","created_at","format","updated_at","octokit","Octokit","App","useState","publicList","setPublicList","userList","setUserList","setInvalidUser","useEffect","a","gists","listPublic","res","status","data","console","log","getList","className","data-testid","username","listForUser","getGistForUser","then","catch","GlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d3033e24.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Octicon from \"react-octicon\";\r\n\r\nconst Search = (props) => {\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      props.getUserList(e.target.value); //Fetching Username to search and passing to parent components using properties\r\n    }\r\n  };\r\n  return (\r\n    <Wrapper>\r\n      <InputBox>\r\n        <Octicon name=\"search\" />\r\n        <Input\r\n          placeholder=\"Search Gists for the username\"\r\n          onKeyDown={handleKeyDown} //Calling function to handle enter key registry\r\n        />\r\n      </InputBox>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  padding: 8px;\r\n  background-color: #ffffff;\r\n  font-size: 14px;\r\n  line-height: 1.5;\r\n  border-radius: 6px;\r\n  margin: 0 16px;\r\n`;\r\n\r\nconst InputBox = styled.div`\r\n  border-radius: 4px;\r\n  display: flex;\r\n  width: 400px;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  border: none;\r\n  width: 100%;\r\n  font-size: 16px;\r\n\r\n  &:focus {\r\n    outline: 0;\r\n  }\r\n`;\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Octicon from \"react-octicon\";\r\nimport Search from \"./Search\";\r\n\r\nfunction Header(props) {\r\n  return (\r\n    <Wrapper>\r\n      <Octicon name=\"mark-github\" mega />\r\n      <Search getUserList={props.getUserList} />\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  background-color: #24292e;\r\n  color: #ffffff;\r\n  z-index: 32;\r\n  padding: 16px;\r\n  font-size: 14px;\r\n  line-height: 1.5;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport default Header;\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n  body{\r\n    margin: 0;\r\n    font-family: Helvetica Neue,Helvetica,Segoe UI,Arial,freesans,sans-serif;\r\n    color: #626465;\r\n  }\r\n  *{\r\n    box-sizing: border-box;\r\n  }\r\n`;\r\n\r\nexport default GlobalStyles;\r\n","import React, { Component } from \"react\";\r\nimport Octicon from \"react-octicon\";\r\nimport styled from \"styled-components\";\r\n\r\n//File component to generate file list dynamically\r\nfunction File(props) {\r\n  return (\r\n    <div>\r\n      <Wrapper>\r\n        {Object.keys(props.gistItem.files).map((key, index) => (\r\n          <FileItem\r\n            fileName={props.gistItem.files[key].filename}\r\n            url={props.gistItem.files[key].raw_url}\r\n          />\r\n        ))}\r\n      </Wrapper>\r\n    </div>\r\n  );\r\n}\r\n\r\n//Individual file component\r\nfunction FileItem(props) {\r\n  return (\r\n    <div>\r\n      <Wrapper>\r\n        <Octicon name=\"file\" />\r\n        <a href={props.url} style={aStyle}>\r\n          {props.fileName}\r\n        </a>\r\n      </Wrapper>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  color: #0366d6;\r\n  z-index: 32;\r\n  padding-left: 25px;\r\n  font-size: 14px;\r\n  display: flex;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  gap: 5px;\r\n`;\r\n\r\nconst aStyle = {\r\n  color: \"#0366d6\",\r\n  fontWeight: \"600\",\r\n  textDecoration: \"none\",\r\n};\r\n\r\nexport default File;\r\n","import React, { Component } from \"react\";\r\nimport Octicon from \"react-octicon\";\r\nimport styled from \"styled-components\";\r\nimport File from \"./File\";\r\n\r\nconst image_style = {\r\n  width: \"40px\",\r\n  height: \"40px\",\r\n  borderRadius: \"50%\",\r\n};\r\n\r\nfunction Gist(props) {\r\n  return (\r\n    //Rendering individual components using values passed in properties by parent component\r\n    <div style={rootDivStyle}>\r\n      <Wrapper>\r\n        <img src={props.avatar_link} style={image_style}></img>\r\n        <a href={props.user_link} style={aStyle}>\r\n          {props.user_name}\r\n        </a>\r\n        <Octicon name=\"code\" />\r\n        <p>{props.file_length} Files</p>\r\n        <Octicon name=\"repo-forked\" />\r\n        <p>Forks</p>\r\n        <Octicon name=\"comment\" />\r\n        <p>{props.comments} Comments</p>\r\n        <Octicon name=\"star\" />\r\n        <p>Stars</p>\r\n      </Wrapper>\r\n      <div style={internalDivStyle}>\r\n        <p>Created at: {props.created_time} </p>\r\n        <p>Last updated: {props.updated_time}</p>\r\n      </div>\r\n      <h3 style={internalDivStyle}>{props.description}</h3>\r\n      <File gistItem={props.gistItem} />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  color: #0366d6;\r\n  z-index: 32;\r\n  padding: 16px;\r\n  padding-bottom: 0;\r\n  font-size: 14px;\r\n  line-height: 1.5;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 15px;\r\n`;\r\n\r\nconst rootDivStyle = {\r\n  borderBottom: \"1px solid #D3D3D3\",\r\n  paddingTop: \"25px\",\r\n  paddingBottom: \"25px\",\r\n  width: \"80%\",\r\n};\r\nconst internalDivStyle = {\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  gap: \"15px\",\r\n  marginTop: \"0\",\r\n  paddingLeft: \"16px\",\r\n};\r\n\r\nconst aStyle = {\r\n  color: \"#0366d6\",\r\n  fontWeight: \"600\",\r\n  paddingRight: \"150px\",\r\n  textDecoration: \"none\",\r\n};\r\nexport default Gist;\r\n","import React, { Component } from \"react\";\r\nimport Gist from \"./Gist\";\r\nimport moment from \"moment\";\r\n\r\nfunction GistList(props) {\r\n  return (\r\n    <div style={centerDivsStyle}>\r\n      {props.invalidUser === true ? (\r\n        <h1 style={h1Style}>Username is Invalid</h1> //Conditionally rendering Error Message\r\n      ) : props.gistList === null ? (\r\n        <h1 style={h1Style}>No Gists for User</h1>\r\n      ) : (\r\n        props.gistList.map((\r\n          gistItem //Rendering Gist List using maps\r\n        ) => (\r\n          <Gist\r\n            avatar_link={gistItem.owner.avatar_url}\r\n            user_link={gistItem.owner.html_url}\r\n            user_name={gistItem.owner.login}\r\n            file_length={Object.keys(gistItem.files).length}\r\n            created_time={moment(gistItem.created_at).format(\"L\")} //Using Moment.js for formatting date\r\n            updated_time={moment(gistItem.updated_at).format(\"L\")}\r\n            description={gistItem.description}\r\n            gistItem={gistItem}\r\n            comments={gistItem.comments}\r\n          />\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nconst h1Style = {\r\n  textAlign: \"center\",\r\n  paddingTop: \"200px\",\r\n};\r\nconst centerDivsStyle = {\r\n  diplay: \"flex\",\r\n  alignItems: \"center\",\r\n};\r\nexport default GistList;\r\n","import { Octokit } from \"@octokit/rest\";\r\nconst octokit = new Octokit()\r\n\r\nexport const getPublicGists = () => octokit.gists.listPublic()\r\n\r\nexport const getGistForUser = username =>  octokit.gists.listForUser({ username });","import styled from \"styled-components\";\r\nimport Header from \"./components/Header\";\r\nimport GlobalStyles from \"./GlobalStyle\";\r\nimport GistList from \"./components/GistList\";\r\nimport { getPublicGists, getGistForUser } from \"./services/gistService\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nconst App = () => {\r\n  //Declaring state variables with appropriate initial states\r\n  const [publicList, setPublicList] = useState([]);\r\n  const [userList, setUserList] = useState([]);\r\n  const [invalidUser, setInvalidUser] = useState(false);\r\n\r\n  //fetching public data on component mount\r\n  useEffect(() => {\r\n    const getList = async () => {\r\n      // Using OctoKit package functions to fetch data\r\n      const res = await getPublicGists();\r\n      if (res.status === 200) {\r\n        setPublicList(res.data);\r\n        console.log(\"Public: \" + publicList);\r\n      } else {\r\n        setPublicList([]);\r\n      }\r\n    };\r\n    getList();\r\n  }, []);\r\n\r\n  //Funtion for fetching specific user data which is called on Enter key in search field\r\n  function getUserList(username) {\r\n    if (username === \"\") {\r\n      setUserList([]);\r\n      setInvalidUser(false); //Reset Invalid User state\r\n    } else {\r\n      getGistForUser(username)\r\n        .then((res) => {\r\n          if (res.status === 200) {\r\n            setInvalidUser(false);\r\n            if (res.data.length > 0) {\r\n              setUserList(res.data); //Setting state variable for fetched data\r\n            } else {\r\n              setUserList(null);\r\n            }\r\n          }\r\n        })\r\n        .catch((e) => setInvalidUser(true)); //Invalid user state to show message on fetch failure\r\n    }\r\n  }\r\n  return (\r\n    <Wrapper className=\"App\" data-testid=\"app\">\r\n      <Header getUserList={getUserList} />\r\n      <GistList\r\n        gistList={\r\n          userList === null ? null : userList.length > 0 ? userList : publicList //Conditionally passing state to child component\r\n        }\r\n        invalidUser={invalidUser} //To track invalid user\r\n      />\r\n      <GlobalStyles />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  font-size: 14px;\r\n  line-height: 1.5;\r\n`;\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}