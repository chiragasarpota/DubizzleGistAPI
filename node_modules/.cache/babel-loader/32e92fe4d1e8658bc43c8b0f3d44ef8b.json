{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\dubizzle-onboarding\\\\gistapi\\\\src\\\\components\\\\GistList.js\";\nimport React, { Component } from \"react\";\nimport Gist from \"./Gist\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction GistList(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: centerDivsStyle,\n    children: props.invalidUser === true ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: h1Style,\n      children: \"Username is Invalid\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this) //Conditionally rendering Error Message\n    : props.gistList === null ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: h1Style,\n      children: \"No Gists for User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this) : props.gistList.map((gistItem //Rendering Gist List using maps\n    ) =>\n    /*#__PURE__*/\n    _jsxDEV(Gist, {\n      avatar_link: gistItem.owner.avatar_url,\n      user_link: gistItem.owner.html_url,\n      user_name: gistItem.owner.login,\n      file_length: Object.keys(gistItem.files).length,\n      created_time: moment(gistItem.created_at).format(\"L\") //Using Moment.js for formatting date\n      ,\n      updated_time: moment(gistItem.updated_at).format(\"L\"),\n      description: gistItem.description,\n      gistItem: gistItem,\n      comments: gistItem.comments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n\n_c = GistList;\nconst h1Style = {\n  textAlign: \"center\",\n  paddingTop: \"200px\"\n};\nconst centerDivsStyle = {\n  diplay: \"flex\",\n  alignItems: \"center\"\n};\nexport default GistList;\n\nvar _c;\n\n$RefreshReg$(_c, \"GistList\");","map":{"version":3,"sources":["C:/Projects/dubizzle-onboarding/gistapi/src/components/GistList.js"],"names":["React","Component","Gist","moment","GistList","props","centerDivsStyle","invalidUser","h1Style","gistList","map","gistItem","owner","avatar_url","html_url","login","Object","keys","files","length","created_at","format","updated_at","description","comments","textAlign","paddingTop","diplay","alignItems"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,sBACE;AAAK,IAAA,KAAK,EAAEC,eAAZ;AAAA,cACGD,KAAK,CAACE,WAAN,KAAsB,IAAtB,gBACC;AAAI,MAAA,KAAK,EAAEC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,CAC8C;AAD9C,MAEGH,KAAK,CAACI,QAAN,KAAmB,IAAnB,gBACF;AAAI,MAAA,KAAK,EAAED,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADE,GAGFH,KAAK,CAACI,QAAN,CAAeC,GAAf,CAAmB,CACjBC,QADiB,CACR;AADQ;AAAA;AAGjB,YAAC,IAAD;AACE,MAAA,WAAW,EAAEA,QAAQ,CAACC,KAAT,CAAeC,UAD9B;AAEE,MAAA,SAAS,EAAEF,QAAQ,CAACC,KAAT,CAAeE,QAF5B;AAGE,MAAA,SAAS,EAAEH,QAAQ,CAACC,KAAT,CAAeG,KAH5B;AAIE,MAAA,WAAW,EAAEC,MAAM,CAACC,IAAP,CAAYN,QAAQ,CAACO,KAArB,EAA4BC,MAJ3C;AAKE,MAAA,YAAY,EAAEhB,MAAM,CAACQ,QAAQ,CAACS,UAAV,CAAN,CAA4BC,MAA5B,CAAmC,GAAnC,CALhB,CAKyD;AALzD;AAME,MAAA,YAAY,EAAElB,MAAM,CAACQ,QAAQ,CAACW,UAAV,CAAN,CAA4BD,MAA5B,CAAmC,GAAnC,CANhB;AAOE,MAAA,WAAW,EAAEV,QAAQ,CAACY,WAPxB;AAQE,MAAA,QAAQ,EAAEZ,QARZ;AASE,MAAA,QAAQ,EAAEA,QAAQ,CAACa;AATrB;AAAA;AAAA;AAAA;AAAA,YAHF;AANJ;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;KA1BQpB,Q;AA2BT,MAAMI,OAAO,GAAG;AACdiB,EAAAA,SAAS,EAAE,QADG;AAEdC,EAAAA,UAAU,EAAE;AAFE,CAAhB;AAIA,MAAMpB,eAAe,GAAG;AACtBqB,EAAAA,MAAM,EAAE,MADc;AAEtBC,EAAAA,UAAU,EAAE;AAFU,CAAxB;AAIA,eAAexB,QAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport Gist from \"./Gist\";\r\nimport moment from \"moment\";\r\n\r\nfunction GistList(props) {\r\n  return (\r\n    <div style={centerDivsStyle}>\r\n      {props.invalidUser === true ? (\r\n        <h1 style={h1Style}>Username is Invalid</h1> //Conditionally rendering Error Message\r\n      ) : props.gistList === null ? (\r\n        <h1 style={h1Style}>No Gists for User</h1>\r\n      ) : (\r\n        props.gistList.map((\r\n          gistItem //Rendering Gist List using maps\r\n        ) => (\r\n          <Gist\r\n            avatar_link={gistItem.owner.avatar_url}\r\n            user_link={gistItem.owner.html_url}\r\n            user_name={gistItem.owner.login}\r\n            file_length={Object.keys(gistItem.files).length}\r\n            created_time={moment(gistItem.created_at).format(\"L\")} //Using Moment.js for formatting date\r\n            updated_time={moment(gistItem.updated_at).format(\"L\")}\r\n            description={gistItem.description}\r\n            gistItem={gistItem}\r\n            comments={gistItem.comments}\r\n          />\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nconst h1Style = {\r\n  textAlign: \"center\",\r\n  paddingTop: \"200px\",\r\n};\r\nconst centerDivsStyle = {\r\n  diplay: \"flex\",\r\n  alignItems: \"center\",\r\n};\r\nexport default GistList;\r\n"]},"metadata":{},"sourceType":"module"}